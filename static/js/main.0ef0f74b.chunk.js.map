{"version":3,"sources":["components/navigation/Navigation.js","components/logo/Logo.js","components/imagelink/ImageLinkForm.js","components/rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/signin/Signin.js","components/Register/Register.js","App.js","serviceWorker.js","index.js","components/logo/brain.jpg"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","alt","src","brain","ImageLinkForm","onInputChange","onSubmit","type","onChange","Rank","name","entries","FaceRecognition","imageUrl","box","id","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","props","onEmailChange","event","setState","SignInEmail","target","value","onPasswordChange","SignInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","href","React","Component","Register","onNameChange","ParticlesOption","initialState","input","route","joined","App","data","displayFaceBox","count","Object","assign","catch","console","log","calculateFaceLocation","error","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.0ef0f74b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation =({onRouteChange , isSignedIn}) =>{\r\n\t\r\n\t\tif(isSignedIn){\r\n\t\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<nav style={{display:'flex', justifyContent:'flex-end'}}>\r\n\t\t\t\t<p onClick={()=> onRouteChange('signout')} className='f3 link dim black underline pa3 pointer left'>sign out</p>\r\n\t\t\t</nav>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t} \r\n\t\telse\r\n\t\t{\r\n\t\t\treturn(\r\n\t\t\t\t<div>\r\n\t\t\t\t<nav style={{display:'flex', justifyContent:'flex-end'}}>\r\n\t\t\t\t\t<p onClick={()=> onRouteChange('register')} className='f3 link dim black underline pa3 pointer left'>Register</p>\r\n\t                <p onClick={()=> onRouteChange('Signin')} className='f3 link dim black underline pa3 pointer left'>sign in</p>\r\n\t\t\t\t</nav>\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t}\r\n\t\r\n}\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.jpg';\r\nimport './Logo.css';\r\n\r\nconst Logo =() =>{\r\n\treturn (\r\n\t\t<div className='ma4 mt0'>\r\n\t\t\t<Tilt className=\"Tilt b2 shadow-2\" options={{ max : 90 }} style={{ height: 150, width: 150 }} >\r\n\t\t\t\t <div className=\"Tilt-inner pa3\"> <img style={{paddingTop:'5px'}}alt='logo' src={brain}/> </div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm =({onInputChange, onSubmit}) =>{\r\n\treturn (\r\n\t\t<div >\r\n\t\t\t<p className='f3'>\r\n\t\t\t{'This Magic Brain will detect faces in pictures.'}\r\n\t\t\t</p>\r\n\t\t\t<div className='center'>\r\n\t\t\t\t<div className='center pa4 br3 shadow-5 form'>\r\n\t\t\t\t\t<input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n\t\t\t\t\t<button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onSubmit}>Detect</button>\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank =({name,entries}) =>{\r\n\treturn (\r\n\r\n\t\t<div>\r\n\t\t <div className='white f3'>\r\n\t\t   {` ${name}, your current entry count is  ....`}\r\n\t\t </div>\r\n\t\t <div className='white f1'>\r\n\t\t\t{entries}\r\n\t\t </div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className='center ma'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/>\r\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n        SignInEmail:'',\r\n        SignInPassword:''\r\n\r\n      }\r\n    }\r\n  \r\n  \r\n  onEmailChange =(event)=>{\r\n    this.setState({SignInEmail:event.target.value})\r\n  }\r\n  onPasswordChange =(event)=>{\r\n    this.setState({SignInPassword:event.target.value})\r\n  }\r\n\r\n  onSubmitSignIn =()=>{\r\n    fetch('https://floating-journey-74814.herokuapp.com/signin',{\r\n      method:'post',\r\n      headers:{'content-Type':'application/json'},\r\n      body:JSON.stringify({\r\n        email:this.state.SignInEmail,\r\n        password:this.state.SignInPassword\r\n      })\r\n    }).then(response => response.json()).then(user=>{\r\n      if(user.id){\r\n        this.props.loadUser(user);\r\n        this.props.onRouteChange('home');\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n  render(){\r\n    const{ onRouteChange } =this.props;\r\n    return (\r\n        <article className=\"br5 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-6 center\">\r\n          <main className=\"pa4 black-80\">\r\n            <div className=\"measure \">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                      <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n                      <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input onChange={this.onEmailChange}className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                      </div>\r\n                      <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input onChange={this.onPasswordChange}className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                      </div>\r\n                   \r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                      <input onClick={ this.onSubmitSignIn } className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                      <p  onClick={()=> onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\r\n                      \r\n                    </div>\r\n            </div>\r\n          </main>\r\n        </article>\r\n\r\n  );\r\n  }\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\n\r\nclass Register extends React.Component {\r\n  \r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n        email:'',\r\n        password:'',\r\n        name:''\r\n\r\n      }\r\n    }\r\n  \r\n   onNameChange =(event)=>{\r\n    this.setState({name:event.target.value})\r\n  }\r\n  onEmailChange =(event)=>{\r\n    this.setState({email:event.target.value})\r\n  }\r\n  onPasswordChange =(event)=>{\r\n    this.setState({password:event.target.value})\r\n  }\r\n\r\n  onSubmitSignIn =()=>{\r\n    fetch('https://floating-journey-74814.herokuapp.com/register',{\r\n      method:'post',\r\n      headers:{'content-Type':'application/json'},\r\n      body:JSON.stringify({\r\n        email:this.state.email,\r\n        password:this.state.password,\r\n        name:this.state.name\r\n      })\r\n    }).then(response => response.json()).then(user=>{\r\n      if(user.id){\r\n        this.props.loadUser(user)\r\n        this.props.onRouteChange('home');\r\n      }\r\n    })\r\n    \r\n  }\r\n render(){\r\n  \r\n   return (\r\n<article className=\"br5 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-6 center\">\r\n          <main className=\"pa4 black-80\">\r\n                <div className=\"measure \">\r\n                  <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f4 fw6 ph0 mh0\">Register</legend>\r\n                     <div className=\"mt3\">\r\n                      <label className=\"db fw6 lh-copy f6\" htmlFor=\"Name\">Name</label>\r\n                      <input onChange={this.onNameChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"Name\"  id=\"Name\"/>\r\n                    </div>\r\n                    <div className=\"mt3\">\r\n                      <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                      <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                      <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                      <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                    </div>\r\n                 \r\n                  </fieldset>\r\n                  <div className=\"pointer\">\r\n                    <input onClick={this.onSubmitSignIn} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib pointer\" type=\"submit\" value=\"Register\"/>\r\n                  </div>\r\n                 \r\n                </div>\r\n          </main>\r\n</article>\r\n\r\n          );\r\n }\r\n}\r\n\r\nexport default Register;","import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\n\nimport Navigation from './components/navigation/Navigation.js'\nimport Logo from './components/logo/Logo.js'\nimport ImageLinkForm from './components/imagelink/ImageLinkForm.js'\nimport Rank from './components/rank/Rank.js'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js'\nimport Signin from './components/signin/Signin.js'\nimport Register from './components/Register/Register.js'\nimport './App.css';\n\n\n\n\n\n\nconst ParticlesOption = {\n      \"particles\": {\n          \"number\": {\n              \"value\": 100\n          },\n          \"size\": {\n              \"value\": 3\n          }\n      },\n      \"interactivity\": {\n          \"events\": {\n              \"onhover\": {\n                  \"enable\": true,\n                  \"mode\": \"repulse\"\n              }\n          }\n      }\n  }\n \n const initialState ={\n    input:'',\n    imageUrl:'',\n    box:{},\n    route:'Signin',\n    isSignedIn:false,\n    user:{\n      id:'',\n    name:'',\n    email: '',\n    entries:0,\n    joined:''\n    }\n   }\n\nclass App extends Component {\n  constructor(){\n   super();\n   this.state=initialState;\n }\n\n//  componentDidMount(){\n//   fetch(https://floating-journey-74814.herokuapp.com//').then(response=> response.json()).then(data=>console.log(data));\n// }\n  loadUser =(data)=>{\n    this.setState({user:{\n      id:data.id,\n    name:data.name,\n    email: data.email,\n    entries:data.entries,\n    joined:data.joined\n\n    }})\n\n  }\n\n \n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n\n onSubmit=()=>{\n  this.setState({imageUrl: this.state.input});\n  fetch('https://floating-journey-74814.herokuapp.com/imageurl',{\n          method:'post',\n          headers:{'content-Type':'application/json'},\n          body:JSON.stringify({\n            input:this.state.input\n          })\n        })\n  .then(response=>response.json())\n  .then(response=> {\n      if(response){\n        fetch('https://floating-journey-74814.herokuapp.com/image',{\n          method:'put',\n          headers:{'content-Type':'application/json'},\n          body:JSON.stringify({\n            id:this.state.user.id\n          })\n          })\n            .then(response=>response.json()).then(count =>{\n              this.setState(Object.assign(this.state.user,{entries:count}))\n            })\n            .catch(console.log)\n      \n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n  .catch(error=>console.log(error));\n }\n\n onInputChange=(event)=>{\n    this.setState({input:event.target.value});\n  }\n onRouteChange=(route)=>{\n  if(route=== 'signout'){\n    this.setState(initialState)\n  }else if(route === 'home'){\n    this.setState({isSignedIn:true})\n  }\n  this.setState({route:route});\n }\n calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n  render(){\n  return (\n    <div className=\"App\">\n      <Particles className='particles'\n        params={ParticlesOption}\n      />\n      <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n      {  this.state.route === 'home'\n      ?<div><Logo />\n      <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n      <ImageLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit} />\n      <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} /></div>\n    \n    :(\n      this.state.route==='Signin'\n      ?<Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n      :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n      )\n      }\n  </div>\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.9a5c7c7f.jpg\";"],"sourceRoot":""}